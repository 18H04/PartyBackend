<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TOKEN_MANAGER_ACCOUNT_CODE" xml:space="preserve">
    <value>口座番号</value>
  </data>
  <data name="TOKEN_MANAGER_ACCOUNT_NAME" xml:space="preserve">
    <value>アカウント名</value>
  </data>
  <data name="TOKEN_MANAGER_ACCOUNT_NUMBER" xml:space="preserve">
    <value>口座番号</value>
  </data>
  <data name="TOKEN_MANAGER_ADD_TOKEN_SUCCESS" xml:space="preserve">
    <value>新しい成功</value>
  </data>
  <data name="TOKEN_MANAGER_ADD_TOKEN_TITLE" xml:space="preserve">
    <value>新しいシステムサービス構成を追加します</value>
  </data>
  <data name="TOKEN_MANAGER_CREDENTIAL_JSON" xml:space="preserve">
    <value>資格情報（Google）</value>
  </data>
  <data name="TOKEN_MANAGER_EMAIL" xml:space="preserve">
    <value>Eメール</value>
  </data>
  <data name="TOKEN_MANAGER_REFRESH_TOKEN" xml:space="preserve">
    <value>リフレッシュトークン</value>
  </data>
  <data name="TOKEN_MANAGER_SDK_KEY" xml:space="preserve">
    <value>SDKキー（モバイル）</value>
  </data>
  <data name="TOKEN_MANAGER_SDK_SECRET" xml:space="preserve">
    <value>SDKシークレット（モバイル）</value>
  </data>
  <data name="TOKEN_MANAGER_SELECT_SERVICE_TYPE" xml:space="preserve">
    <value>サービスタイプを選択してください</value>
  </data>
  <data name="TOKEN_MANAGER_SELECT_TYPE" xml:space="preserve">
    <value>タイプを選ぶ</value>
  </data>
  <data name="TOKEN_MANAGER_SERVICE_TYPE" xml:space="preserve">
    <value>システムサービスタイプ</value>
  </data>
  <data name="TOKEN_MANAGER_TOKEN_DELETE_SUCCESS" xml:space="preserve">
    <value>成功したオブジェクトを削除します</value>
  </data>
  <data name="TOKEN_MANAGER_TOKEN_EXIST" xml:space="preserve">
    <value>アカウントはすでに存在しています</value>
  </data>
  <data name="TOKEN_MANAGER_TOKEN_NOT_EXIST" xml:space="preserve">
    <value>オブジェクトは見つかりませんでした</value>
  </data>
  <data name="TOKEN_MANAGER_TYPE" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="TOKEN_MANAGER_TYPE_GROUP" xml:space="preserve">
    <value>グループ</value>
  </data>
  <data name="TOKEN_MANAGER_TYPE_MEETING" xml:space="preserve">
    <value>会議スケジュール</value>
  </data>
  <data name="TOKEN_MANAGER_TYPE_REPOSITORY" xml:space="preserve">
    <value>保管所</value>
  </data>
  <data name="TOKEN_MANAGER_UPDATE_TOKEN_SUCCESS" xml:space="preserve">
    <value>更新に成功</value>
  </data>
  <data name="TOKEN_MANAGER_UPDATE_TOKEN_TITLE" xml:space="preserve">
    <value>システムサービスの編集の編集</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_ACCOUNT_CODE" xml:space="preserve">
    <value>アカウントアカウントコードが必要です</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_ACCOUNT_NAME" xml:space="preserve">
    <value>アカウント名必須リクエスト</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_ACCOUNT_NUMBER" xml:space="preserve">
    <value>必須の口座番号</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_CREDENTIALS" xml:space="preserve">
    <value>資格情報要件が必要です</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_EMAIL" xml:space="preserve">
    <value>必要な電子メールリクエスト</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_SDK_KEY" xml:space="preserve">
    <value>SDKキーが必要です</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_SDK_SECRET" xml:space="preserve">
    <value>SDKシークレット必要な要件</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_SERVICE_TYPE" xml:space="preserve">
    <value>サービスの種類を空白にすることはできません</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_TYPE" xml:space="preserve">
    <value>空白の種類</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_WEB_KEY" xml:space="preserve">
    <value>必要なAPIキーが必要です</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_WEB_SECRET" xml:space="preserve">
    <value>APIシークレット必要な要件</value>
  </data>
  <data name="TOKEN_MANAGER_VALIDATE_WEB_TOKEN" xml:space="preserve">
    <value>APIトークン必要な要件</value>
  </data>
  <data name="TOKEN_MANAGER_WEB_KEY" xml:space="preserve">
    <value>キー（Web）</value>
  </data>
  <data name="TOKEN_MANAGER_WEB_SECRET" xml:space="preserve">
    <value>秘密（Web）</value>
  </data>
  <data name="TOKEN_MANAGER_WEB_TOKEN" xml:space="preserve">
    <value>トークン（Web）</value>
  </data>
  <data name="TOKEN_MANAGER_TYPE_MATH" xml:space="preserve">
    <value>算数</value>
  </data>
  <data name="TOKEN_MANAGER_FAILED_TO_GET_CREDENTIAL" xml:space="preserve">
    <value>資格情報を取得しようとしているときにエラー</value>
  </data>
  <data name="TOKEN_MANAGER_ZOOM_NO_USER_ID" xml:space="preserve">
    <value>Zoom UserIDを取得できません</value>
  </data>
  <data name="TOKEN_MANAGER_ZOOM_ERR_CONNECT" xml:space="preserve">
    <value>ズームに接続するときにエラー</value>
  </data>
  <data name="TOKEN_MANAGER_ZOOM_TOKEN_INVALID" xml:space="preserve">
    <value>無効なトークン、正しいトークンを入力してください</value>
  </data>
  <data name="TOKEN_MANAGER_HOST_KEY" xml:space="preserve">
    <value>ホストキー</value>
  </data>
</root>