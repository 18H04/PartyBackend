<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="WZM_LEVEL" xml:space="preserve">
    <value>レベル</value>
  </data>
  <data name="WZM_ADD" xml:space="preserve">
    <value>新しく追加する</value>
  </data>
  <data name="WZM_ADD_ATTR_ZONE" xml:space="preserve">
    <value>地域属性を追加します</value>
  </data>
  <data name="WZM_ADD_ZONE" xml:space="preserve">
    <value>エリアを追加します</value>
  </data>
  <data name="WZM_AREA_LABEL" xml:space="preserve">
    <value>地域ラベル</value>
  </data>
  <data name="WZM_ATTR_ZONE" xml:space="preserve">
    <value>地域属性</value>
  </data>
  <data name="WZM_CODE_AND_NAME_ATTR" xml:space="preserve">
    <value>プロパティコードと属性の名前</value>
  </data>
  <data name="WZM_CODE_ATTR" xml:space="preserve">
    <value>プロパティコード</value>
  </data>
  <data name="WZM_CODE_ZONE" xml:space="preserve">
    <value>市外局番</value>
  </data>
  <data name="WZM_DATA_SVG" xml:space="preserve">
    <value>SVGデータ</value>
  </data>
  <data name="WZM_EDIT_ZONE" xml:space="preserve">
    <value>地域編集</value>
  </data>
  <data name="WZM_GROUP_ZONE" xml:space="preserve">
    <value>地域グループ（タイプ1、...）</value>
  </data>
  <data name="WZM_GROUP_ZONE_BTN" xml:space="preserve">
    <value>地域グループ</value>
  </data>
  <data name="WZM_GROUP_ZONE_NOT_BLANK" xml:space="preserve">
    <value>グループは空白のままになりません</value>
  </data>
  <data name="WZM_IMAGE" xml:space="preserve">
    <value>写真</value>
  </data>
  <data name="WZM_LABEL_DESCRIPTION" xml:space="preserve">
    <value>説明ラベル</value>
  </data>
  <data name="WZM_LEVEL_UP" xml:space="preserve">
    <value>ランクー</value>
  </data>
  <data name="WZM_MANIPULATION" xml:space="preserve">
    <value>操作</value>
  </data>
  <data name="WZM_NAME_ATTR" xml:space="preserve">
    <value>属性名</value>
  </data>
  <data name="WZM_NAME_ZONE" xml:space="preserve">
    <value>ドメイン名</value>
  </data>
  <data name="WZM_QUANTITY" xml:space="preserve">
    <value>額</value>
  </data>
  <data name="WZM_REARCH" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="WZM_REGIONAL_STRENGTH" xml:space="preserve">
    <value>容量</value>
  </data>
  <data name="WZM_SAVE" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="WZM_SELECT" xml:space="preserve">
    <value>選択する</value>
  </data>
  <data name="WZM_SIZE" xml:space="preserve">
    <value>サイズ</value>
  </data>
  <data name="WZM_STATUS" xml:space="preserve">
    <value>スターテス</value>
  </data>
  <data name="WZM_STYPE_DATA" xml:space="preserve">
    <value>データ型</value>
  </data>
  <data name="WZM_STYPE_DATA_NOT_BLANK" xml:space="preserve">
    <value>データ型を空白にすることはできません</value>
  </data>
  <data name="WZM_STYPE_ZONE" xml:space="preserve">
    <value>地域タイプ</value>
  </data>
  <data name="WZM_STYPE_ZONE_NOT_BLANK" xml:space="preserve">
    <value>エリアタイプは空白のままになりません</value>
  </data>
  <data name="WZM_STYPE_ZONE_OPTION" xml:space="preserve">
    <value>地域タイプ（倉庫、地域、ドライ、シェルフ）</value>
  </data>
  <data name="WZM_SVG" xml:space="preserve">
    <value>SVG</value>
  </data>
  <data name="WZM_UNIT" xml:space="preserve">
    <value>単位</value>
  </data>
  <data name="WZM_UNIT_NOT_BLANK" xml:space="preserve">
    <value>単位</value>
  </data>
  <data name="WZM_VALUE" xml:space="preserve">
    <value>価値</value>
  </data>
  <data name="WZM_VALUE_UNIT" xml:space="preserve">
    <value>値（単位）</value>
  </data>
  <data name="WZM_ZONE_STOGARE" xml:space="preserve">
    <value>記憶領域</value>
  </data>
</root>