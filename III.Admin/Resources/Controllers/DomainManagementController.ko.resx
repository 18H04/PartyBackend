<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DOM_ADD" xml:space="preserve">
    <value>새로운 걸 더하다</value>
  </data>
  <data name="DOM_ADD_DIGITAL_SIGNATURE" xml:space="preserve">
    <value>디지털 서명을 추가하십시오</value>
  </data>
  <data name="DOM_ADD_SUCCESSFULL" xml:space="preserve">
    <value>새로운 성공</value>
  </data>
  <data name="DOM_CHAPTER" xml:space="preserve">
    <value>장 우편</value>
  </data>
  <data name="DOM_CHECK_IN_LOCATION_NO_SPACE" xml:space="preserve">
    <value>위치 확인 인쇄는 비어 있지 않습니다</value>
  </data>
  <data name="DOM_CHECK_IN_TIME_NO_SPACE" xml:space="preserve">
    <value>인쇄 시간을 확인해야합니다</value>
  </data>
  <data name="DOM_CHECK_OUT_LOCATION_NO_SPACE" xml:space="preserve">
    <value>체크 아웃 위치가 비어 있지 않습니다</value>
  </data>
  <data name="DOM_CHECK_OUT_TIME_NO_SPACE" xml:space="preserve">
    <value>시간 확인은 비어 있지 않습니다</value>
  </data>
  <data name="DOM_DELETE" xml:space="preserve">
    <value>삭제</value>
  </data>
  <data name="DOM_EDIT" xml:space="preserve">
    <value>편집하다</value>
  </data>
  <data name="DOM_EDIT_TIME" xml:space="preserve">
    <value>편집하다:</value>
  </data>
  <data name="DOM_ERROR_ADD" xml:space="preserve">
    <value>추가 할 때 오류가 있습니다</value>
  </data>
  <data name="DOM_ERROR_OCCUR" xml:space="preserve">
    <value>오류가 발생했습니다</value>
  </data>
  <data name="DOM_FILE_NOT_EXIST_OR_REPAIR" xml:space="preserve">
    <value>파일이 없거나 수리 중입니다</value>
  </data>
  <data name="DOM_FILE_NOT_SUPPORT_PLAYBACK" xml:space="preserve">
    <value>파일이 아직 지원되지 않았습니다</value>
  </data>
  <data name="DOM_FILE_UNLOCK_SUCCESS" xml:space="preserve">
    <value>파일 잠금 해제</value>
  </data>
  <data name="DOM_HAVE_FINISH_LECTURE" xml:space="preserve">
    <value>당신은 강의를 마쳤습니다</value>
  </data>
  <data name="DOM_LEARN" xml:space="preserve">
    <value>관행</value>
  </data>
  <data name="DOM_LOG_SUCCESS" xml:space="preserve">
    <value>로그 성공</value>
  </data>
  <data name="DOM_NO_LACK_ID" xml:space="preserve">
    <value>ID가 부족하지 마십시오</value>
  </data>
  <data name="DOM_NOT_LEAVE_DOMAIN_BLANK" xml:space="preserve">
    <value>도메인을 떠나지 마십시오</value>
  </data>
  <data name="DOM_PLAY_VIDEO" xml:space="preserve">
    <value>동영상 재생</value>
  </data>
  <data name="DOM_REDO" xml:space="preserve">
    <value>다시 하다</value>
  </data>
  <data name="DOM_SIGN_FAIL" xml:space="preserve">
    <value>로그인 실패</value>
  </data>
  <data name="DOM_SIGNED" xml:space="preserve">
    <value>서명했다</value>
  </data>
  <data name="DOM_SUBMIT" xml:space="preserve">
    <value>제출하다</value>
  </data>
  <data name="DOM_USER_SIGNATURE_AND_UPDATE_SIGNATURE" xml:space="preserve">
    <value>사용자는 아직 서명을 선언하지 않았습니다. 서명을 업데이트하십시오</value>
  </data>
  <data name="DOM_WORK_CONTENT" xml:space="preserve">
    <value>작업 콘텐츠</value>
  </data>
  <data name="DOM_WRITE_COMMENT" xml:space="preserve">
    <value>코멘트 쓰기...</value>
  </data>
</root>